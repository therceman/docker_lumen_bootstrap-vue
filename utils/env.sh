#!/bin/bash

# Usage Example
#############################################################
# To generate a config file for api module
# For PROD environment: ./env.sh -m api
# For DEV environment: ./env.sh -m api -e dev
#############################################################

while getopts e:m: flag; do
  case "${flag}" in
  e) env=${OPTARG} ;;
  m) module=${OPTARG} ;;
  esac
done

# Args to lowercase
env=${env,,}
module=${module,,}

if [ "$env" = "" ] | [ "$env" = "prod" ]; then
  env="prod"
  env_suffix=""
else
  env_suffix=".$env"
fi

printf "Creating ENV [%s] | " "$env"
printf "Module [%s] => " "$module"

COMPILE_FOLDER="config/env.compiled"
ENV_TRG_PATH="modules/$module/.env"

mkdir $COMPILE_FOLDER

rm -f "$ENV_TRG_PATH"
printf "##########################################################################\n" >>"$ENV_TRG_PATH"
printf "# Warning. This file has been automatically generated by project Makefile\n" >>"$ENV_TRG_PATH"
printf "# Do not edit this file. Only generated version from 'games' repo is accepted\n" >>"$ENV_TRG_PATH"
printf "##########################################################################" >>"$ENV_TRG_PATH"
printf "\r\n\r\nENV=%s" "$env" >> "$ENV_TRG_PATH"

# process global config

FILES="config/env/$module/*"
for f in $FILES; do
  # echo "- Global Config: $f"
  if test -f "$f"; then
    cp "$f" "$COMPILE_FOLDER"
  fi
done

# process env config

if [ "$env" != "" ]; then
  FILES="config/env$env_suffix/$module/*"
  for f in $FILES; do
    # echo "- ENV Config: $f"
    if test -f "$f"; then
      cp "$f" "$COMPILE_FOLDER"
    fi
  done
fi

# combine all config

FILES="$COMPILE_FOLDER/*"
for f in $FILES; do
  printf "\n\n" | cat - "$f" >>"$ENV_TRG_PATH"
done

rm -rf $COMPILE_FOLDER

printf "%s" "$ENV_TRG_PATH"
echo ""